paths:
  /api/sessions/register:
    post:
      tags: [Auth]
      summary: Registrar nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: "Juan"
                last_name:
                  type: string
                  example: "Perez"
                email:
                  type: string
                  format: email
                  example: "usuario@example.com"
                password:
                  type: string
                  format: password
                  example: "Password123!"
                role:
                  type: string
                  enum: ["user", "admin"]
                  example: "user"
              required:
                - first_name
                - last_name
                - email
                - password
      responses:
        201:
          description: Usuario registrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          $ref: '#/components/responses/ValidationError'

  /api/sessions/login:
    post:
      tags: [Auth]
      summary: Iniciar sesión
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "usuario@example.com"
                password:
                  type: string
                  format: password
                  example: "Password123!"
              required:
                - email
                - password
      responses:
        200:
          description: Sesión iniciada
          headers:
            Set-Cookie:
              schema:
                type: string
              example: "coderCookie=token; Path=/; HttpOnly"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  message:
                    type: string
                    example: "Logged in"
        400:
          $ref: '#/components/responses/ValidationError'
        404:
          $ref: '#/components/responses/NotFound'

  /api/sessions/current:
    get:
      tags: [Auth]
      summary: Obtener usuario actual
      security:
        - cookieAuth: []
      responses:
        200:
          description: Usuario actual
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        401:
          $ref: '#/components/responses/Unauthorized'